name: Pull request infrastructure
description: Create tse infrastructure for pull request
inputs:
  aws-accsess-key-id:
    required: true
  aws-secret-access-key:
    required: true
  aws-session-token:
    required: true
  git-token:
    required: true
  pr-number:
    required: true
  send-notification:
    default: true
    required: false
  slack-token:
    required: false
outputs:
  deployed-apps:
    value: ${{ steps.filtered_apps.outputs.config }}
  domain-name:
    value: ${{ steps.setup-tse-env.outputs.domain_name }}
runs:
  using: composite
  steps:
    - name: Checkout repository code
      uses: actions/checkout@v2
      with:
        ref: refs/pull/${{ inputs.pr-number }}/merge
        fetch-depth: 2
    - name: Fetch main branch
      shell: bash
      run: git fetch origin main
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Setup Rush
      uses: telia-actions/fft-actions/actions/setup-rush@f159d20f61878cb220b514e9a585838df28b9487
    - name: Get config
      id: config
      uses: telia-actions/fft-actions/actions/get-app-config@f159d20f61878cb220b514e9a585838df28b9487
      with:
        environment: pr
    - name: Show changed projects
      shell: bash
      run: node common/scripts/install-run-rush.js --quiet list --only git:origin/main --json
    - name: Get changed projects
      shell: bash
      id: changed_projects
      run: |
        node common/scripts/install-run-rush.js --quiet list --only git:origin/main --json > list.json
        content=`cat ./list.json`

        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"

        echo "::set-output name=list::$content"
    - name: Filter changed nextApps
      uses: actions/github-script@v5
      id: filtered_apps
      with:
        script: |
          const config = ${{ steps.config.outputs.config }};
          const { projects } = ${{ steps.changed_projects.outputs.list }};

          config.apps = config.apps.filter(({ name }) => projects.some(project => `@telia/${name}` === project.name));

          core.setOutput("config", config);
          core.setOutput("has_changes", config.apps.length !== 0);
          if (config.apps.length === 0) {
            core.warning("No apps were changed, skipping infrastructure creation");
          }
    - name: Content to file
      shell: bash
      if: steps.filtered_apps.outputs.has_changes == 'true'
      run: echo ${{ toJson(steps.filtered_apps.outputs.config) }} > config.json
    - uses: telia-actions/fft-actions/actions/setup-tse-env@f159d20f61878cb220b514e9a585838df28b9487
      if: steps.filtered_apps.outputs.has_changes == 'true'
      id: setup-tse-env
      with:
        apply-changes: true
        aws-accsess-key-id: ${{ inputs.aws-accsess-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-session-token: ${{ inputs.aws-session-token }}
        env-name: pr-${{ inputs.pr-number }}
        git-token: ${{ inputs.git-token }}
        terraform-parameters: config.json
        type: pull_request
    - uses: telia-actions/fft-actions/actions/pull-request-notification@main
      if: inputs.send-notification == 'true' && steps.filtered_apps.outputs.has_changes == 'true'
      with:
        github-comment: "Pull request environment has been created - [${{ steps.setup-tse-env.outputs.domain_name }}](https://${{ steps.setup-tse-env.outputs.domain_name }})"
        github-token: ${{ inputs.git-token }}
        pr-number: ${{ inputs.pr-number }}
        slack-message: "Pull request environment has been created - ${{ steps.setup-tse-env.outputs.domain_name }}"
        slack-token: ${{ inputs.slack-token }}
    - name: Add annotation
      shell: bash
      if: steps.filtered_apps.outputs.has_changes == 'true'
      run: echo "::notice ::Pull request environment has been created - ${{ steps.setup-tse-env.outputs.domain_name }}"