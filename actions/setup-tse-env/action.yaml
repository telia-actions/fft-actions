name: "setup tse env"
description: Github action to setup tse environment infrastructure
inputs:
  applyChanges:
    description: Should changes be applied, aletnatively dry-run
    required: false
  awsAccsessKeyId:
    required: true
  awsSecretAccessKey:
    required: true
  awsSessionToken:
    required: true
  envName:
    required: true
  gitToken:
    required: true
  terraformParameters:
    description: Additional terraform parameters
    required: true
  type:
    description: Environment type 'pull_request' or 'preview' allowed
    required: true
runs:
  using: composite
  steps:
    - name: Set env vars
      shell: bash
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ inputs.awsAccsessKeyId }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ inputs.awsSecretAccessKey }}" >> $GITHUB_ENV
        echo "AWS_SESSION_TOKEN=${{ inputs.awsSessionToken }}" >> $GITHUB_ENV
    - name: Variables
      shell: bash
      id: variables
      run: echo '::set-output name=terraform_working_dir::fft-aws-infrastructure/tse/${{ inputs.type }}'
    - name: Checkout repository code
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.gitToken }}
        repository: telia-company/fft-aws-infrastructure
        path: fft-aws-infrastructure
    - name: Copy config
      run: mv ${{ inputs.terraformParameters }} ${{ steps.variables.outputs.terraform_working_dir }}
      shell: bash
    - name: Terraform Init
      run: terraform init -backend-config="key=pipeline/tse/${{ inputs.type }}/${{ inputs.envName }}.tfstate"
      shell: bash
      working-directory: ${{ steps.variables.outputs.terraform_working_dir }}
    - name: Terraform plan
      env:
        TF_VAR_env_name: ${{ inputs.envName }}
      run: terraform plan -var-file="${{ inputs.terraformParameters }}" -out plan
      shell: bash
      working-directory: ${{ steps.variables.outputs.terraform_working_dir }}
    - name: Terraform Apply
      if: ${{ inputs.applyChanges == 'true' }}
      run: terraform apply -auto-approve "plan"
      shell: bash
      working-directory: ${{ steps.variables.outputs.terraform_working_dir }}
