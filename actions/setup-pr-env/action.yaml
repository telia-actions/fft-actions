name: "setup pr env"
inputs:
  applyChanges:
    required: false
  awsAccsessKeyId:
    required: true
  awsSecretAccessKey:
    required: true
  awsSessionToken:
    required: true
  envName:
    required: true
  gitToken:
    required: true
  prNumber:
    required: true
  routeConfig:
    required: true
  subnetName:
    required: true
runs:
  using: composite
  steps:
    - name: Set env vars
      shell: bash
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ inputs.awsAccsessKeyId }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ inputs.awsSecretAccessKey }}" >> $GITHUB_ENV
        echo "AWS_SESSION_TOKEN=${{ inputs.awsSessionToken }}" >> $GITHUB_ENV
    - name: Checkout repository code
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.gitToken }}
        repository: telia-company/transistor-aws-infrastructure
        ref: fft-49-preview-code-to-generic
    - name: Copy config
      run: mv ${{ inputs.routeConfig }} ./preview
      shell: bash
    - name: Terraform Init
      run: terraform init -backend-config="key=pipeline/tse/pull_request/${{ inputs.prNumber }}.tfstate"
      shell: bash
      working-directory: ./preview
    - name: Terraform plan
      env:
        TF_VAR_env_name: ${{ inputs.envName }}
        TF_VAR_gh_prefix: ${{ inputs.prNumber }}
        TF_VAR_subnet_name: ${{ inputs.subnetName }}
      run: terraform plan -var-file="${{ inputs.routeConfig }}" -out plan
      shell: bash
      working-directory: ./preview
    - name: Terraform Apply
      if: ${{ inputs.applyChanges == 'true' }}
      run: terraform apply -auto-approve "plan"
      shell: bash
      working-directory: ./preview
